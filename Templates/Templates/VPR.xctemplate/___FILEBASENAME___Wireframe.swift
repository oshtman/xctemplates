//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright (c) ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by @oshtman's VIPER generator
//

import UIKit

protocol ___VARIABLE_moduleName___WireframeInput {

}

final class ___VARIABLE_moduleName___Wireframe: BaseWireframe {

    func prepare() -> UIViewController? {
        let view = ___VARIABLE_moduleName___ViewController() 
        configureModule(with: view)        
        return view
    }

    func configureModule(with view: ___VARIABLE_moduleName___ViewController & ___VARIABLE_moduleName___PresenterOutput) {

        let presenter = ___VARIABLE_moduleName___Presenter(wireframe: self, view: view)
        view.presenter = presenter
    }
    
    override func present(_ data: [String : Any]?, from source: BaseWireframe?) throws {
        guard let view = prepare() else { return }
    }
    
    override func dismiss(_ view: Any?) {

    }

}

//MARK: - Extensions

extension ___VARIABLE_moduleName___Wireframe: ___VARIABLE_moduleName___WireframeInput {
    
}